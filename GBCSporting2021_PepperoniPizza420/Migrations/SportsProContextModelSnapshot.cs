// <auto-generated />
using System;
using GBCSporting2021_PepperoniPizza420.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GBCSporting2021_PepperoniPizza420.Migrations
{
    [DbContext(typeof(SportsProContext))]
    partial class SportsProContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "United States"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "El Salvador"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "1 Blue Jays Ways",
                            City = "Jeffville",
                            CountryId = 1,
                            Email = "jeff@jeff.com",
                            FirstName = "Jeff",
                            LastName = "Bezos",
                            Phone = "+1(123)321-4325",
                            PostalCode = "JEF F10",
                            State = "Ontario"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "2 Blue Jays Ways",
                            City = "Oliviettoville",
                            CountryId = 2,
                            Email = "o@liver.com",
                            FirstName = "Oliver",
                            LastName = "Doe",
                            Phone = "+1(122)321-4325",
                            PostalCode = "JEF F10",
                            State = "Ontario"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "3 Blue Jays Ways",
                            City = "Franville",
                            CountryId = 3,
                            Email = "fran@k.com",
                            FirstName = "Francisco",
                            LastName = "Carzone",
                            Phone = "+1(323)321-4325",
                            PostalCode = "1020",
                            State = "Ontario"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentId = 1,
                            CustomerId = 1,
                            DateClosed = new DateTime(2021, 2, 23, 19, 4, 3, 81, DateTimeKind.Local).AddTicks(7044),
                            DateOpened = new DateTime(2021, 2, 23, 19, 4, 3, 78, DateTimeKind.Local).AddTicks(6855),
                            Description = "This is an incident",
                            ProductId = 1,
                            TechnicianId = 1,
                            Title = "Title 1"
                        },
                        new
                        {
                            IncidentId = 2,
                            CustomerId = 2,
                            DateClosed = new DateTime(2021, 2, 23, 19, 4, 3, 81, DateTimeKind.Local).AddTicks(7758),
                            DateOpened = new DateTime(2021, 2, 23, 19, 4, 3, 81, DateTimeKind.Local).AddTicks(7722),
                            Description = "This is another incident",
                            ProductId = 2,
                            TechnicianId = 2,
                            Title = "Title 2"
                        },
                        new
                        {
                            IncidentId = 3,
                            CustomerId = 3,
                            DateClosed = new DateTime(2021, 2, 23, 19, 4, 3, 81, DateTimeKind.Local).AddTicks(7771),
                            DateOpened = new DateTime(2021, 2, 23, 19, 4, 3, 81, DateTimeKind.Local).AddTicks(7768),
                            Description = "This is not an incident (jk)",
                            ProductId = 3,
                            TechnicianId = 3,
                            Title = "Title 3"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Code = "H3LL0W0RLD",
                            Name = "Pizza",
                            Price = 4.2000000000000002,
                            ReleaseDate = new DateTime(2021, 2, 23, 19, 4, 3, 82, DateTimeKind.Local).AddTicks(595)
                        },
                        new
                        {
                            ProductId = 2,
                            Code = "W0RLDH3LL0",
                            Name = "Pepperoni",
                            Price = 69.989999999999995,
                            ReleaseDate = new DateTime(2021, 2, 23, 19, 4, 3, 82, DateTimeKind.Local).AddTicks(1105)
                        },
                        new
                        {
                            ProductId = 3,
                            Code = "IDKWTPH",
                            Name = "Ham",
                            Price = 77.700000000000003,
                            ReleaseDate = new DateTime(2021, 2, 23, 19, 4, 3, 82, DateTimeKind.Local).AddTicks(1126)
                        });
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Registration", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ProductId = 1,
                            RegistrationId = 1
                        },
                        new
                        {
                            CustomerId = 2,
                            ProductId = 2,
                            RegistrationId = 2
                        },
                        new
                        {
                            CustomerId = 3,
                            ProductId = 3,
                            RegistrationId = 3
                        });
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechnicianId = 1,
                            Email = "brad@gmai.com",
                            Name = "Brad",
                            Phone = "+1(111)111-1111"
                        },
                        new
                        {
                            TechnicianId = 2,
                            Email = "chad@gmai.com",
                            Name = "Chad",
                            Phone = "+1(222)222-2222"
                        },
                        new
                        {
                            TechnicianId = 3,
                            Email = "thad@gmai.com",
                            Name = "Thad",
                            Phone = "+1(333)333-3333"
                        });
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Customer", b =>
                {
                    b.HasOne("GBCSporting2021_PepperoniPizza420.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Incident", b =>
                {
                    b.HasOne("GBCSporting2021_PepperoniPizza420.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_PepperoniPizza420.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_PepperoniPizza420.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Registration", b =>
                {
                    b.HasOne("GBCSporting2021_PepperoniPizza420.Models.Customer", "Customer")
                        .WithMany("Registrations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GBCSporting2021_PepperoniPizza420.Models.Product", "Product")
                        .WithMany("Registrations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Customer", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("GBCSporting2021_PepperoniPizza420.Models.Product", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
